# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- 202???

resources:
  repositories:
  - repository: sonic-buildimage
    type: github
    name: sonic-net/sonic-buildimage
    endpoint: build

variables:
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)

stages:
- stage: Build

  jobs:
  - job:
    displayName: "Python3"
    variables:
      DIFF_COVER_CHECK_THRESHOLD: 80
      DIFF_COVER_ENABLE: 'true'
      DIFF_COVER_WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)/sonic-host-services
    pool:
      vmImage: ubuntu-20.04

    container:
      image: sonicdev-microsoft.azurecr.io:443/sonic-slave-bullseye:$(BUILD_BRANCH)

    steps:
    - checkout: self
      clean: true
      submodules: recursive
      displayName: 'Checkout code'
  
    - checkout: sonic-buildimage
      clean: true
      displayName: 'Checkout code'
  
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/sonic-buildimage/src/sonic-host-services-data/'
        contents: '**'
        targetFolder: $(System.DefaultWorkingDirectory)/sonic-host-services-data/

    - task: DownloadPipelineArtifact@2
      inputs:
        source: specific
        project: build
        pipeline: 142
        artifact: sonic-buildimage.vs
        runVersion: 'latestFromBranch'
        runBranch: 'refs/heads/$(BUILD_BRANCH)'
        patterns: |
          **/*.deb
          **/*.whl
      displayName: "Download artifacts from latest sonic-buildimage build"

    - script: |
        set -xe
        sudo apt-get -y purge libhiredis-dev libnl-3-dev libnl-route-3-dev || true
        sudo dpkg -i libnl-3-200_*.deb
        sudo dpkg -i libnl-genl-3-200_*.deb
        sudo dpkg -i libnl-route-3-200_*.deb
        sudo dpkg -i libnl-nf-3-200_*.deb
        sudo dpkg -i libhiredis0.14_*.deb
        sudo dpkg -i libyang_1.0.73_*.deb
      workingDirectory: $(Pipeline.Workspace)/target/debs/bullseye/
      displayName: 'Install Debian dependencies'

    - task: DownloadPipelineArtifact@2
      inputs:
        source: specific
        project: build
        pipeline: 9
        artifact: sonic-swss-common
        runVersion: 'latestFromBranch'
        runBranch: 'refs/heads/$(BUILD_BRANCH)'
      displayName: "Download sonic swss common deb packages"

    - script: |
        set -xe
        sudo dpkg -i libswsscommon_1.0.0_amd64.deb
        sudo dpkg -i python3-swsscommon_1.0.0_amd64.deb
      workingDirectory: $(Pipeline.Workspace)/
      displayName: 'Install swss-common dependencies'

    - script: |
        set -xe
        sudo pip3 install swsssdk-2.0.1-py3-none-any.whl
        sudo pip3 install sonic_py_common-1.0-py3-none-any.whl
      workingDirectory: $(Pipeline.Workspace)/target/python-wheels/bullseye/
      displayName: 'Install Python dependencies'

    - script: |
        set -ex
        # Install .NET CORE
        curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo apt-add-repository https://packages.microsoft.com/debian/11/prod
        sudo apt-get update
        sudo apt-get install -y dotnet-sdk-5.0
      displayName: "Install .NET CORE"

    - script: |
        pushd sonic-host-services

        python3 setup.py test
      displayName: 'Test Python 3'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '$(System.DefaultWorkingDirectory)/sonic-host-services/test-results.xml'
        testRunTitle: Python 3
        failTaskOnFailedTests: true
      condition: succeededOrFailed()
      displayName: 'Publish Python 3 test results'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/sonic-host-services/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/sonic-host-services/htmlcov/'
      displayName: 'Publish Python 3 test coverage'

    - script: |
        set -e
        pushd sonic-host-services
        python3 setup.py bdist_wheel
      displayName: 'Build Python 3 wheel'

    - publish: '$(System.DefaultWorkingDirectory)/sonic-host-services/dist/'
      artifact: wheels
      displayName: "Publish Python wheels"

